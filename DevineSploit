local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "üî• DevineSploit | Dahood üî´",
   LoadingTitle = "üî´ DevineSploit üí•",
   LoadingSubtitle = "by .entityvalk",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Example Hub"
   },
   Discord = {
      Enabled = true,
      Invite = "JjQJDpwhjT", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Key | DevineSploit",
      Subtitle = "Key System",
      Note = "Key In Discord Server for buyers",
      FileName = "YoutubeHubKey1", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://pastebin.com/raw/zhQGtU8S"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("üè† Home", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "Thanks for buying DevineSploit have fun.",
   Content = "Made by .entityvalk on discord.",
   Duration = 5,
   Image = 13047715178,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})

local Button = MainTab:CreateButton({
   Name = "Camlock C",
   Callback = function()
   loadstring(game:HttpGet('https://pastebin.com/raw/YD47wP2g'))()
   end,
})

local Button = MainTab:CreateButton({
   Name = "tool lock pc/mob",
   Callback = function()
   loadstring(game:HttpGet('https://pastebin.com/raw/G2DAew4x'))()
   end,
})

local Button = MainTab:CreateButton({
   Name = "Rejoin server",
   Callback = function()
   loadstring(game:HttpGet('https://pastebin.com/raw/yVdXMaFy'))()
   end,
})


local TPTab = Window:CreateTab("üì± Mobile Scripts", nil) -- Title, Image

local Button1 = TPTab:CreateButton({
   Name = "Speed Tool",
   Callback = function()
         loadstring(game:HttpGet("https://pastebin.com/raw/aFZDmKMr", true))()
   end,
})

local Button2 = TPTab:CreateButton({
   Name = "Tool Lock OP",
   Callback = function()
        loadstring(game:HttpGet('https://pastebin.com/raw/G2DAew4x'))()
   end,
})



local MainSection = MainTab:CreateSection("Speed")
local Button = MainTab:CreateButton({
   Name = "Speed Tool",
   Callback = function()
   loadstring(game:HttpGet("https://pastebin.com/raw/aFZDmKMr", true))()
   end,
})


local Button = MainTab:CreateButton({
   Name = "CFrame Gui",
   Callback = function()
   loadstring(game:HttpGet('https://pastebin.com/raw/Vbh5ivX2'))()
   end,
})


local MainSection = MainTab:CreateSection("AntiLock/Resolvers")

local Button = MainTab:CreateButton({
   Name = "AntiLock Toggle Z",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/AvianProjects/Dahood/main/AntilockerV2",true))()
   end,
})

local TPTab = Window:CreateTab("üé≤ Coming soon!", nil) -- Title, Image



local gui = script.Parent -- Assuming the GUI is a direct child of the script

-- Function to close the GUI
local function closeGUI()
    gui.Enabled = false
end

-- Check if the platform is mobile
local isMobile = game:GetService("UserInputService").TouchEnabled

-- Create a close button
local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Text = "Close"
closeButton.Size = UDim2.new(0, 100, 0, 50)
closeButton.Position = UDim2.new(0.5, -50, 0.9, -25)
closeButton.Parent = gui

-- Bind a function to the close button
closeButton.MouseButton1Click:Connect(closeGUI)

-- If it's a mobile platform, allow closing GUI with a swipe gesture
if isMobile then
    local dragInput, dragStart, startPos

    closeButton.MouseButton1Down:Connect(function()
        startPos = closeButton.Position
        dragStart = Vector2.new(gui.AbsolutePosition.X, gui.AbsolutePosition.Y)
        closeButton.MouseMoved:Connect(function()
            dragInput = Vector2.new(gui.AbsolutePosition.X, gui.AbsolutePosition.Y) - dragStart
            closeButton.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + dragInput.X, startPos.Y.Scale, startPos.Y.Offset + dragInput.Y)
        end)
        closeButton.MouseButton1Up:Connect(function()
            dragInput = nil
        end)
    end)
end
